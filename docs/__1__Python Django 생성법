########################################################################################################################
Django란?
    ->
########################################################################################################################
0.
MySQL(5.1)에 root로 접속해서
    -> mysql -u root -p
djdb 데이터베이스 생성
    -> create database djdb;
djdb 계정 생성및 권한 설정
    -> grant all privileges on djdb.* to 'djdb'@'localhost' identified by 'djdb';

1.
Pycharm에서 webapps Project 생성


2. venv에 Django 라이브러리 설치 ( 2.0.6 )
    -> (venv) pip install django==2.0.6

3.
mysqlclient(1.3.13) 드라이버 설치
    -> (venv) pip install ...\mysqlclient-1.3.13-cp36-cp36m-win_amd64.whl

4.
Django Project 생성
    -> pycharm (venv)터미널에서
    -> (venv) django-admin startproject webapps
    ->( webapps/manage.py 와 webapps/webapps/etc.. 이렇게 생김)
    ->기존의 webapps이 프로젝트로 존재 하므로 처리 필요함

5.
Pycharm Project를 Django Project로 변경하기
    -> 디렉토리 이동/삭제

6.
settings.py 설정
    -> webapps/webapps/settings.py 에서 database의 default값을 변경해준다.
        -> 'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'djdb',
        'USER': 'djdb',
        'PASSWORD': 'djdb',
        'HOST': '127.0.0.1',
        'PORT': '3306'
        }
    -> 타임존(TIME_ZONE) 설정
        -> TIME_ZONE = 'Asia/Seoul'

7.
기본적으로 Django 프로젝트가 관리하는 테이블 생성
    -> (venv) python manage.py migrate

8.
admin(관리자) 계정 생성
    -> 여기서 관리자란 Django Project( webapps )의 관리자를 이야기한다. ( 다른 프로젝트를 만들면 다른 관리자 필요)
    -> (venv) python managa.py createsuperuser

9.
지금까지의 작업 확인하기
    1) 서버 시작하기
        -> (venv) python manage.py runserver 0.0.0.0:8888
        -> python(파이선명령) manage.py(manage.py 실행) runserver(1번째 매개변수) 0.0.0.0:8888(2번째 매개변수)
        -> 0.0.0.0 임의의 모든 ip 주소라는 의미
    2) 브라우저로 접근하기
        -> http://localhost:8888
    3) 브라우저로 관리자 페이지 접근하기
        -> http://localhost:8888/admin
        -> admin 계정의 로그인 창이 나온다.

10.
template 디렉토리 설정
    -> settings.py에서
        1) TEMPLATES = [
        {
            ......,
            'DIRS': [os.path.join(BASE_DIR, 'templates')],
            .......,
        },
        ]
    -> webapps 프로젝트에 templates 디렉토리 생성

11.
static 자원(html, css, js, images, etc...)에 대한 접근설정
    -> settings.py에서
        STATICFILES_DIRS = (
            os.path.join(BASE_DIR, 'statics')
        )
        STATIC_URL = '/assets/'

========================================================================================================================